<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

    <resultMap  id="userMap" type="UserVO">
        <result property="userId" column="USER_ID"/>
        <result property="userPw" column="USER_PW"/>
        <result property="userName" column="USER_NAME"/>
        <result property="userEmail" column="USER_EMAIL"/>
        <result property="userRegnum" column="USER_REGNUM"/>
        <result property="userMileage" column="USER_MILEAGE"/>
        <result property="userPassnum" column="USER_PASSNUM"/>
        <result property="memCode" column="MEM_CODE"/>
    </resultMap>

    <!-- id , pw확인 -->
    <select id="selectUser" resultType="int">
        select count(*)
        from users
        where user_id = #{userId}
          and user_pw = #{userPw}
    </select>

    <select id="selectMileage" resultType="int">
        select user_mileage
        from users
        where user_id = #{userId}
    </select>

    <insert id="insertOrder" parameterType="ordersVO">
        insert into orders (ORDER_ID, ORDER_AMT, USER_ID, PROD_ID, ORDER_QTY)
        VALUES ('ORD-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-' || order_seq.NEXTVAL, #{orderAmt}, #{userId}, #{prodId},#{orderQty})
    </insert>

    <update id="updateMileage">
        UPDATE users
        SET user_mileage = #{userMileage}
        WHERE user_id = #{userId}
    </update>

    <!-- id 중복검사 -->
    <select id="userIdCount" parameterType="String" resultType="int">
        select count(*)
        from users
        where user_id = #{userId}
    </select>

    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="com.example.demo.vo.UserVO">
        INSERT INTO users (user_id, user_pw, user_name, user_regnum, user_email)
        VALUES (#{userId}, #{userPw}, #{userName}, #{userRegnum}, #{userEmail})
    </insert>

    <!-- 로그인 -->
    <select id="login" parameterType="UserVO" resultMap="userMap">
        SELECT * FROM users WHERE USER_ID = #{user_id} AND USER_PW = #{user_pw}
    </select>

    <!-- 비밀번호 찾기-->
    <select id="getUserByIdRegnumEmail" parameterType="UserVO" resultMap="userMap">
        SELECT USER_ID
            , USER_PW
            , USER_NAME
            , USER_EMAIL
            , USER_REGNUM
            , USER_MILEAGE
            , USER_PASSNUM
            , MEM_CODE
            , USER_TOTALMILEAGE
        FROM users
        WHERE user_id = #{userId}
        AND user_regnum = #{userRegnum}
        AND user_email = #{userEmail}
    </select>

    <update id="updateUserPassword" parameterType="com.example.demo.vo.UserVO">
        UPDATE users SET user_pw = #{userPw} WHERE user_id = #{userId}
    </update>

    <!-- 아이디 찾기
     List<UserVO> userList = session.selectList("user.getUserByNameRegnumEmail", userVO);
    -->
    <select id="getUserByNameRegnumEmail" parameterType="UserVO" resultMap="userMap">
        SELECT USER_ID
             , USER_PW
             , USER_NAME
             , USER_EMAIL
             , USER_REGNUM
             , USER_MILEAGE
             , USER_PASSNUM
             , MEM_CODE
             , USER_TOTALMILEAGE
        FROM users
        WHERE USER_NAME = #{userName}
          AND USER_REGNUM = #{userRegnum}
          AND USER_EMAIL = #{userEmail}
    </select>

    <!-- 사용자 정보 조회 -->
    <select id="getUser" parameterType="String" resultType="com.example.demo.vo.UserVO">
        SELECT
            USER_ID AS userId,
            USER_PW AS userPw,
            USER_NAME AS userName,
            USER_EMAIL AS userEmail,
            USER_REGNUM AS userRegnum
        FROM users
        WHERE user_id = #{userId}
    </select>
</mapper>